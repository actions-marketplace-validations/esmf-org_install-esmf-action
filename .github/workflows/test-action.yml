name: install-esmf-action test

on:
  push:
  pull_request:

jobs:
  test-example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Package Install
      run: |
        sudo apt-get -qq -y update
        sudo apt -qq install libnetcdf-dev libnetcdff-dev
    - name: Install ESMF
      uses: ./
    - name: Test ESMF Installation
      run: |
        cat ${ESMFMKFILE}
  test-matrix:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        version: [latest]
        compiler: [gfortran]
        comm: [mpiuni]
        netcdf: [nc-config]
        cache: [true]
    runs-on: ${{matrix.os}}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Dependency Directory Setup
      run: |
        export STACK_DIR=${HOME}/stack
        mkdir -p ${STACK_DIR}/{include,lib,lib64,bin}
        export LD_LIBRARY_PATH=${STACK_DIR}/lib64:${STACK_DIR}/lib:${LD_LIBRARY_PATH}
        echo "STACK_DIR=${STACK_DIR}" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}" >> $GITHUB_ENV
        echo "${STACK_DIR}/bin" >> $GITHUB_PATH
    - name: Cache Dependencies
      id: cache-libraries
      uses: actions/cache@v3
      with:
        path: ${{env.STACK_DIR}}
        key: stack-${{runner.os}}-${{runner.arch}}
    - name: Install Libraries
      env:
        HDF5_URL: https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.2/src/hdf5-1.12.2.tar.gz
        NETCDF_C_URL: https://github.com/Unidata/netcdf-c/archive/v4.9.0.tar.gz
        NETCDF_FORTRAN_URL: https://github.com/Unidata/netcdf-fortran/archive/v4.5.4.tar.gz
        CACHE_HIT: ${{steps.cache-libraries-restore.outputs.cache-hit}}
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          echo "Install HDF5"
          mkdir ${{runner.temp}}/hdf5
          cd ${{runner.temp}}/hdf5
          curl -L ${{env.HDF5_URL}} | tar --strip-components=2 -xz
          ./configure --quiet --enable-silent-rules --enable-fortran --prefix=${STACK_DIR}
          make all install
          echo "Install NETCDF-C"
          mkdir ${{runner.temp}}/netcdf-c
          cd ${{runner.temp}}/netcdf-c
          curl -L ${{env.NETCDF_C_URL}} | tar --strip-components=1 -xz
          CPPFLAGS=-I${STACK_DIR}/include LDFLAGS=-L${STACK_DIR}/lib ./configure --quiet --enable-silent-rules --prefix=${STACK_DIR}
          make all install
          echo "Install NETCDF-FORTRAN"
          mkdir ${{runner.temp}}/netcdf-fortran
          cd ${{runner.temp}}/netcdf-fortran
          curl -L ${{env.NETCDF_FORTRAN_URL}} | tar --strip-components=1 -xz
          CPPFLAGS=-I${STACK_DIR}/include LDFLAGS=-L${STACK_DIR}/lib ./configure --quiet --enable-silent-rules --prefix=${STACK_DIR}
          make all install
        fi
        echo "HDF5_ROOT=$STACK_DIR" >> $GITHUB_ENV
        echo "NETCDF_ROOT=$STACK_DIR" >> $GITHUB_ENV
        echo "NETCDFF_ROOT=$STACK_DIR" >> $GITHUB_ENV
    - name: Install ESMF
      uses: ./
      with:
        version: ${{matrix.version}}
        compiler: ${{matrix.compiler}}
        comm: ${{matrix.comm}}
        netcdf: ${{matrix.netcdf}}
        cache: ${{matrix.cache}}
    - name: Test Installation
      run: |
        cat ${ESMFMKFILE}
